# syntax=docker/dockerfile:1.7-labs

FROM alpine/git AS repo
WORKDIR /
RUN git clone https://github.com/ihs-ustutt/dtOO-ThirdParty.git
COPY --exclude=**/build_* . /dtOO-ThirdParty.local
WORKDIR /dtOO-ThirdParty
ARG GIT_REV=main
RUN git checkout ${GIT_REV}
WORKDIR /

FROM ubuntu:24.04 AS base
ARG CBASE=
COPY --from=repo /dtOO-ThirdParty${CBASE} /dtOO-ThirdParty

RUN apt-get update
RUN apt-get install -y \
  ssh git \
  cmake make automake autogen autoconf libtool patch \
  build-essential \
  swig \
  libblas-dev liblapack-dev libeigen3-dev gfortran \
  curl \
  python3 python3-dev python3-numpy python3-venv python3-pip \
  qtbase5-dev nlohmann-json3-dev \
  libboost-filesystem-dev libboost-program-options-dev libboost-regex-dev \
  libboost-thread-dev libboost-timer-dev \
  libmuparser-dev \
  libgsl-dev \
  software-properties-common

RUN add-apt-repository -y ppa:bleedingedge/noble-bleed
RUN apt-get update
RUN apt-get install -y \
  libocct-data-exchange-dev libocct-draw-dev libocct-foundation-dev \
  libocct-modeling-algorithms-dev \
  libocct-modeling-data-dev libocct-ocaf-dev libocct-visualization-dev \
  libocct-data-exchange-7.8 libocct-draw-7.8 libocct-foundation-7.8 \
  libocct-modeling-algorithms-7.8 libocct-modeling-data-7.8 libocct-ocaf-7.8 \
  libocct-visualization-7.8

RUN \
  echo "deb [arch=amd64] https://dl.openfoam.com/repos/deb noble main" \
  > /etc/apt/sources.list.d/openfoam.list
RUN \
  cat /dtOO-ThirdParty/openfoam_pubkey.gpg \
  | gpg --dearmor > /etc/apt/trusted.gpg.d/openfoam.gpg
RUN apt-get update
RUN apt-get install -y \
  openfoam2312 openfoam2312-common openfoam2312-default \
  openfoam2312-dev openfoam2312-source openfoam2312-tools \
  openfoam2312-tutorials

ENV CC=/usr/bin/gcc
ENV CXX=/usr/bin/g++
ENV FC=/usr/bin/gfortran

RUN git clone https://github.com/ihs-ustutt/foamFine.git

WORKDIR /dtOO-ThirdParty
ENV DTOO_EXTERNLIBS=/dtOO-install
ARG NCPU=2
RUN bash buildDep -i ${DTOO_EXTERNLIBS} -n ${NCPU} -o cgns -tee
RUN bash buildDep -i ${DTOO_EXTERNLIBS} -n ${NCPU} -o openmesh -tee
RUN bash buildDep -i ${DTOO_EXTERNLIBS} -n ${NCPU} -o openvolumemesh -tee
RUN bash buildDep -i ${DTOO_EXTERNLIBS} -n ${NCPU} -o gmsh -tee
RUN bash buildDep -i ${DTOO_EXTERNLIBS} -n ${NCPU} -o moab -tee
WORKDIR /foamFine/of
RUN . /usr/lib/openfoam/openfoam2312/etc/bashrc && wmake all
RUN ln -s /root/OpenFOAM/user-2312 /root/OpenFOAM/root-2312

RUN echo "source /usr/lib/openfoam/openfoam2312/etc/bashrc" >> /root/.profile
RUN echo "source /usr/lib/openfoam/openfoam2312/etc/bashrc" >> /root/.bashrc
ENV FOAMFINE_DIR=/foamFine

ENV PATH=/root/.local/bin:$PATH

RUN python3 -m venv ~/dtoo-py 
RUN echo "source ~/dtoo-py/bin/activate" >> /root/.profile
RUN echo "source ~/dtoo-py/bin/activate" >> /root/.bashrc
RUN . ~/dtoo-py/bin/activate && pip install pyfoam
RUN . ~/dtoo-py/bin/activate && pip install oslo.concurrency 
RUN . ~/dtoo-py/bin/activate && pip install scikit-learn

ENV PATH=/dtOO-install/bin:$PATH

FROM base AS base-prod
RUN rm -rf /dtOO-ThirdParty/ThirdParty/*
